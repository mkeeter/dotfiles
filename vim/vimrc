" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ================ General Config ====================
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set mouse=a                     "Mouse is active
set ttymouse=xterm2             "And gets scroll wheel

set timeoutlen=1000 ttimeoutlen=50 "Fast mode switching

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
set hidden

" Yank to and put from system clipboard
set clipboard=unnamed

" Turn on syntax highlighting
syntax on
autocmd BufEnter * :syntax sync fromstart

" Highlight .frag and .vert files (GLSL) like c
au BufNewFile,BufRead *.vert set filetype=c
au BufNewFile,BufRead *.frag set filetype=c

" Highlight .ipy files as Python
au BufNewFile,BufRead *.ipy set filetype=python

" Disable modelines for security purposes
set modelines=0

" Use comma as leader key
let mapleader=","
let maplocalleader=","

" =============== Vundle Initialization ===============
" This loads all the plugins specified in ~/.vim/vundle.vim
" Use Vundle plugin to manage all other plugins
source ~/.vim/vundles.vim

" ================ Turn Off Swap Files ==============
set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if version >= 730
    silent !mkdir ~/.vim/backups > /dev/null 2>&1
    set undodir=~/.vim/backups
    set undofile
endif

" ================ Indentation ======================
set autoindent
set smartindent
au! FileType python setl nosmartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" ================ Folds ============================
set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================
set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*DS_Store*
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" =========== Set current directory from file =======
cd %:p:h

" ================ Scrolling ========================
set scrolloff=4         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================= Color scheme =====================
syntax enable
set background=dark
colorscheme solarized

" ================ GUI settings ======================
if has("gui_running")
    set t_Co=256
    set lines=60
    set columns=200
    set guifont=Inconsolata\ for\ Powerline:h16,Inconsolata\ XL:h14,Inconsolata:h20,Monaco:h17
    set guioptions-=T " No UI panel
    set guioptions-=r " No scroll bar on right
    set guioptions-=L " No scroll bar on left
endif

" ======== Settings for status bar ===================
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs

" ======== Focus mode ================================
function! ToggleFocusMode()
  if (&foldcolumn != 12)
    set laststatus=0
    set numberwidth=10
    set foldcolumn=12
    set noruler
    hi FoldColumn ctermbg=none
    hi LineNr ctermfg=0 ctermbg=none
    hi NonText ctermfg=0
  else
    set laststatus=2
    set numberwidth=4
    set foldcolumn=0
    set ruler
    execute 'colorscheme ' . g:colors_name
  endif
endfunc
nnoremap <F1> :call ToggleFocusMode()<cr>


" ======== Silent command execution + redraw =========
command! -nargs=1 Silent
\ | execute ':silent !'.<q-args>
\ | execute ':redraw!'

" Interpret .node files as python
" (for Antimony development)
au BufNewFile,BufRead *.node set filetype=python

" ======== Required to make Fish happy ==============
set shell=/bin/bash

" ======= Compile current project with ,b ===========
nmap <leader>b :!cd build* && if [ -e Makefile ]; then make -j8; else ninja; fi<cr>
